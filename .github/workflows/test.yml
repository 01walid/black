name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache location
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      - name: Restore pip cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip

      - name: Get Poetry cache location
        id: poetry-cache
        run: |
          python -m pip install --upgrade pip poetry
          python -c "print('::set-output name=dir::', end='')"
          poetry config cache-dir

      - name: Restore Poetry cache
        uses: actions/cache@v1
        id: cache
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key:
            poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{
            matrix.python-version }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          poetry install -E d

      - name: Unit tests
        run: |
          poetry run pytest --cov=.
